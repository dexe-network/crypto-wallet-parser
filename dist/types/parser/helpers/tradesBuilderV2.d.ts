import { IGroupedTransactions, ITokenBalanceItem } from '../../interfaces/etherscan.interfaces';
import { ITradeIterateObject } from '../../interfaces/parser/tradesBuilderV2.interface';
import { IServices } from '../../interfaces';
export declare class TradesBuilderV2 {
    private services;
    private calculateTransaction;
    private parseTransactionWallet;
    constructor(services: IServices);
    buildTrades(data: IGroupedTransactions<ITokenBalanceItem>[]): Promise<ITradeIterateObject>;
    private generateVirtualTrades;
    private generateVirtualTransactions;
    private generateBalanceDiffForVirtualTradePnl;
    private behaviourIterator;
    private calculateOutgoingEvent;
    private calculateIncomeEvent;
    private calculateOperationWithOpenTrade;
    private createIterateSellEvents;
    private openNewTrade;
    private getBalanceCost;
    private createNewTradeEvent;
    private calculateAverageStartDep;
    private averageStartDepETH;
    private averageStartDepUSD;
    private calculateTokenEventPrice;
    private createTokenInfo;
    private tradeTypeSwitcher;
    private isErrorTransaction;
    private getTokenOperationState;
    private operationPriceWithFee;
    private balanceDifferences;
    private operationPriceFromOtherSource;
    private operationPriceFromUniswap;
}
