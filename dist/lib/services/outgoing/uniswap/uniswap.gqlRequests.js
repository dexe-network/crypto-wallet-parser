"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkTokenArrPriceInUSDandETHCurrent = exports.checkTokenArrPriceInUSDandETHByBlockNumber = void 0;
var tslib_1 = require("tslib");
var graphql_request_1 = require("graphql-request");
exports.checkTokenArrPriceInUSDandETHByBlockNumber = graphql_request_1.gql(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n  query pairs($token: Bytes!, $tokenUSDC: Bytes!, $tokenWETH: Bytes!, $blockNumber: Int!) {\n    usdc0: pairs(where: { token0: $token, token1: $tokenUSDC, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token1Price\n    }\n    usdc1: pairs(where: { token1: $token, token0: $tokenUSDC, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token0Price\n    }\n    weth0: pairs(where: { token0: $token, token1: $tokenWETH, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token1Price\n    }\n    weth1: pairs(where: { token1: $token, token0: $tokenWETH, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token0Price\n    }\n    ethPrice: bundles(block: { number: $blockNumber }) {\n      ethPrice\n    }\n  }\n"], ["\n  query pairs($token: Bytes!, $tokenUSDC: Bytes!, $tokenWETH: Bytes!, $blockNumber: Int!) {\n    usdc0: pairs(where: { token0: $token, token1: $tokenUSDC, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token1Price\n    }\n    usdc1: pairs(where: { token1: $token, token0: $tokenUSDC, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token0Price\n    }\n    weth0: pairs(where: { token0: $token, token1: $tokenWETH, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token1Price\n    }\n    weth1: pairs(where: { token1: $token, token0: $tokenWETH, reserveUSD_gt: 10000 }, block: { number: $blockNumber }) {\n      id\n      token0Price\n    }\n    ethPrice: bundles(block: { number: $blockNumber }) {\n      ethPrice\n    }\n  }\n"])));
exports.checkTokenArrPriceInUSDandETHCurrent = graphql_request_1.gql(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["\n  query pairs($token: Bytes!, $tokenUSDC: Bytes!, $tokenWETH: Bytes!) {\n    usdc0: pairs(where: { token0: $token, token1: $tokenUSDC, reserveUSD_gt: 10000 }) {\n      id\n      token1Price\n    }\n    usdc1: pairs(where: { token1: $token, token0: $tokenUSDC, reserveUSD_gt: 10000 }) {\n      id\n      token0Price\n    }\n    weth0: pairs(where: { token0: $token, token1: $tokenWETH, reserveUSD_gt: 10000 }) {\n      id\n      token1Price\n    }\n    weth1: pairs(where: { token1: $token, token0: $tokenWETH, reserveUSD_gt: 10000 }) {\n      id\n      token0Price\n    }\n    ethPrice: bundles(where: { id: 1 }) {\n      ethPrice\n    }\n  }\n"], ["\n  query pairs($token: Bytes!, $tokenUSDC: Bytes!, $tokenWETH: Bytes!) {\n    usdc0: pairs(where: { token0: $token, token1: $tokenUSDC, reserveUSD_gt: 10000 }) {\n      id\n      token1Price\n    }\n    usdc1: pairs(where: { token1: $token, token0: $tokenUSDC, reserveUSD_gt: 10000 }) {\n      id\n      token0Price\n    }\n    weth0: pairs(where: { token0: $token, token1: $tokenWETH, reserveUSD_gt: 10000 }) {\n      id\n      token1Price\n    }\n    weth1: pairs(where: { token1: $token, token0: $tokenWETH, reserveUSD_gt: 10000 }) {\n      id\n      token0Price\n    }\n    ethPrice: bundles(where: { id: 1 }) {\n      ethPrice\n    }\n  }\n"])));
var templateObject_1, templateObject_2;
//# sourceMappingURL=uniswap.gqlRequests.js.map